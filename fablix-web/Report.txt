We conducted 2 ways to improve the performance of the parser.

	----- Strategy 1 : changing loop style -----

* Mains243.xml

======================================================
Loop type     |  Min time  |  Max time  |  Average   |
======================================================
While loop    |  11784 ms  |  13818 ms  |  12801 ms  |
------------------------------------------------------
For loop      |  11507 ms  |  13654 ms  | 12580.5 ms |
------------------------------------------------------
For loop(dec) |  11297 ms  |  12633 ms  |  11965 ms  | *
------------------------------------------------------
For each loop |  11783 ms  |  13654 ms  | 12718.5 ms |
------------------------------------------------------

* Casts124.xml

======================================================
Loop type     |  Min time  |  Max time  |  Average   |
======================================================
While loop    |  35323 ms  |  36163 ms  |  35743 ms  |
------------------------------------------------------
For loop      |  35729 ms  |  37816 ms  |  36768 ms  |
------------------------------------------------------
For loop(dec) |  34614 ms  |  35691 ms  | 35155.5 ms | *
------------------------------------------------------
For each loop |  35245 ms  |  35866 ms  |  35866 ms  |
------------------------------------------------------

* Actors68.xml

======================================================
Loop type     |  Min time  |  Max time  |  Average   |
======================================================
While loop    |  175520 ms |  176994 ms |  176257 ms |
------------------------------------------------------
For loop      |  175769 ms |  177769 ms |  176769 ms |
------------------------------------------------------
For loop(dec) |  175384 ms |  176264 ms |  175824 ms | *
------------------------------------------------------
For each loop |  175832 ms |  177020 ms |  176426 ms |
------------------------------------------------------

In the same environment, four tests were conducted each.
(Results may vary depending on the computer environment or data)

	----- Strategy 2 : hashMap with different loop style -----

* Mains243.xml

======================================================
Loop type     |  Min time  |  Max time  |  Average   |
======================================================
for(a:values) |  11544 ms  |  11628 ms  |  11586 ms  | *
------------------------------------------------------
Map.foreach   |  11692 ms  |  11786 ms  |  11739 ms  |
------------------------------------------------------

* Casts124.xml

======================================================
Loop type     |  Min time  |  Max time  |  Average   |
======================================================
for(a:values) |  34248 ms  |  34935 ms  | 34591.5 ms | *
------------------------------------------------------
Map.foreach   |  34273 ms  |  35170 ms  | 34721.5 ms |
------------------------------------------------------

* Actors68.xml

======================================================
Loop type     |  Min time  |  Max time  |  Average   |
======================================================
for(a:values) |  175359 ms |  176253 ms |  175806 ms | *
------------------------------------------------------
Map.foreach   |  176559 ms |  176813 ms |  176686 ms |
------------------------------------------------------

In the same environment, four tests were conducted each.
(Results may vary depending on the computer environment or data)

	----- Conclusion -----

Neither of these two strategies resulted in dramatic performance changes.
However, the first strategy shows that changing the Loop style could improve performance.

In the case of Mains243 file,
The maximum time was 12801 ms when using the while loop.
The minimum time was 11965 ms when using the for loop decreasing order.

In the case of Casts124 file,
The maximum time was the basic for loop with 36768 ms.
The minimum time was the for loop decreasing order, showing 35155.5 ms.

In the case of Actors 68 file,
The maximum time was 176769 ms with using the basic for loop.
The minimum time was 175824 ms when using the for loop decreasing order.

The difference was 836, 1612.5, and 945 ms.

As a second strategy, HashMap was used.
Among the first strategies, iteration was performed using two different styles: For(a:values) and Map.foreach.

In the case of Mains243,
It showed 11586 ms with for(a:values) loop style and 11739 ms with Map.foreach.

In the case of Casts124,
for(a:values) took 34591.5 ms and Map.foreach took 34721.5 ms.

In the case of Actors68,
When using for(a:values), it showed 175806 ms.
It showed 176686 ms when using Map.foreach.

The difference in execution time was 153, 130, and 880 ms, respectively, with two iteration styles of hashMap.

The minimum values when using hashMap and ArrayList are 379, 564, and 18 ms.
The result shows that hashMap has a slightly better performance with the given amount of data and our codes.